// source: error.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.error.GrabError');
goog.provide('proto.error.GrabError.Communication');
goog.provide('proto.error.GrabError.Config');
goog.provide('proto.error.GrabError.ErrorCase');
goog.provide('proto.error.GrabError.Interrupted');
goog.provide('proto.error.GrabError.InvalidRange');
goog.provide('proto.error.GrabError.IoOperation');
goog.provide('proto.error.GrabError.NotInitialize');
goog.provide('proto.error.GrabError.Unsupported');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.common.RangeInclusive');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.error.GrabError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.error.GrabError.oneofGroups_);
};
goog.inherits(proto.error.GrabError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.error.GrabError.displayName = 'proto.error.GrabError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.error.GrabError.Config = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.error.GrabError.Config, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.error.GrabError.Config.displayName = 'proto.error.GrabError.Config';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.error.GrabError.Communication = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.error.GrabError.Communication, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.error.GrabError.Communication.displayName = 'proto.error.GrabError.Communication';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.error.GrabError.IoOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.error.GrabError.IoOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.error.GrabError.IoOperation.displayName = 'proto.error.GrabError.IoOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.error.GrabError.InvalidRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.error.GrabError.InvalidRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.error.GrabError.InvalidRange.displayName = 'proto.error.GrabError.InvalidRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.error.GrabError.Interrupted = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.error.GrabError.Interrupted, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.error.GrabError.Interrupted.displayName = 'proto.error.GrabError.Interrupted';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.error.GrabError.NotInitialize = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.error.GrabError.NotInitialize, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.error.GrabError.NotInitialize.displayName = 'proto.error.GrabError.NotInitialize';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.error.GrabError.Unsupported = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.error.GrabError.Unsupported, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.error.GrabError.Unsupported.displayName = 'proto.error.GrabError.Unsupported';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.error.GrabError.oneofGroups_ = [[1,2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.error.GrabError.ErrorCase = {
  ERROR_NOT_SET: 0,
  CONFIG: 1,
  COMMUNICATION: 2,
  IO_OPERATION: 3,
  INVALID_RANGE: 4,
  INTERRUPTED: 5,
  NOT_INITIALIZE: 6,
  UNSUPPORTED: 7
};

/**
 * @return {proto.error.GrabError.ErrorCase}
 */
proto.error.GrabError.prototype.getErrorCase = function() {
  return /** @type {proto.error.GrabError.ErrorCase} */(jspb.Message.computeOneofCase(this, proto.error.GrabError.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.error.GrabError.prototype.toObject = function(opt_includeInstance) {
  return proto.error.GrabError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.error.GrabError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.error.GrabError.Config.toObject(includeInstance, f),
    communication: (f = msg.getCommunication()) && proto.error.GrabError.Communication.toObject(includeInstance, f),
    ioOperation: (f = msg.getIoOperation()) && proto.error.GrabError.IoOperation.toObject(includeInstance, f),
    invalidRange: (f = msg.getInvalidRange()) && proto.error.GrabError.InvalidRange.toObject(includeInstance, f),
    interrupted: (f = msg.getInterrupted()) && proto.error.GrabError.Interrupted.toObject(includeInstance, f),
    notInitialize: (f = msg.getNotInitialize()) && proto.error.GrabError.NotInitialize.toObject(includeInstance, f),
    unsupported: (f = msg.getUnsupported()) && proto.error.GrabError.Unsupported.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.error.GrabError}
 */
proto.error.GrabError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.error.GrabError;
  return proto.error.GrabError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.error.GrabError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.error.GrabError}
 */
proto.error.GrabError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.error.GrabError.Config;
      reader.readMessage(value,proto.error.GrabError.Config.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 2:
      var value = new proto.error.GrabError.Communication;
      reader.readMessage(value,proto.error.GrabError.Communication.deserializeBinaryFromReader);
      msg.setCommunication(value);
      break;
    case 3:
      var value = new proto.error.GrabError.IoOperation;
      reader.readMessage(value,proto.error.GrabError.IoOperation.deserializeBinaryFromReader);
      msg.setIoOperation(value);
      break;
    case 4:
      var value = new proto.error.GrabError.InvalidRange;
      reader.readMessage(value,proto.error.GrabError.InvalidRange.deserializeBinaryFromReader);
      msg.setInvalidRange(value);
      break;
    case 5:
      var value = new proto.error.GrabError.Interrupted;
      reader.readMessage(value,proto.error.GrabError.Interrupted.deserializeBinaryFromReader);
      msg.setInterrupted(value);
      break;
    case 6:
      var value = new proto.error.GrabError.NotInitialize;
      reader.readMessage(value,proto.error.GrabError.NotInitialize.deserializeBinaryFromReader);
      msg.setNotInitialize(value);
      break;
    case 7:
      var value = new proto.error.GrabError.Unsupported;
      reader.readMessage(value,proto.error.GrabError.Unsupported.deserializeBinaryFromReader);
      msg.setUnsupported(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.error.GrabError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.error.GrabError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.error.GrabError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.error.GrabError.Config.serializeBinaryToWriter
    );
  }
  f = message.getCommunication();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.error.GrabError.Communication.serializeBinaryToWriter
    );
  }
  f = message.getIoOperation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.error.GrabError.IoOperation.serializeBinaryToWriter
    );
  }
  f = message.getInvalidRange();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.error.GrabError.InvalidRange.serializeBinaryToWriter
    );
  }
  f = message.getInterrupted();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.error.GrabError.Interrupted.serializeBinaryToWriter
    );
  }
  f = message.getNotInitialize();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.error.GrabError.NotInitialize.serializeBinaryToWriter
    );
  }
  f = message.getUnsupported();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.error.GrabError.Unsupported.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.error.GrabError.Config.prototype.toObject = function(opt_includeInstance) {
  return proto.error.GrabError.Config.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.error.GrabError.Config} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.Config.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.error.GrabError.Config}
 */
proto.error.GrabError.Config.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.error.GrabError.Config;
  return proto.error.GrabError.Config.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.error.GrabError.Config} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.error.GrabError.Config}
 */
proto.error.GrabError.Config.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.error.GrabError.Config.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.error.GrabError.Config.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.error.GrabError.Config} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.Config.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.error.GrabError.Config.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.error.GrabError.Config} returns this
 */
proto.error.GrabError.Config.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.error.GrabError.Communication.prototype.toObject = function(opt_includeInstance) {
  return proto.error.GrabError.Communication.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.error.GrabError.Communication} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.Communication.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.error.GrabError.Communication}
 */
proto.error.GrabError.Communication.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.error.GrabError.Communication;
  return proto.error.GrabError.Communication.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.error.GrabError.Communication} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.error.GrabError.Communication}
 */
proto.error.GrabError.Communication.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.error.GrabError.Communication.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.error.GrabError.Communication.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.error.GrabError.Communication} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.Communication.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.error.GrabError.Communication.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.error.GrabError.Communication} returns this
 */
proto.error.GrabError.Communication.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.error.GrabError.IoOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.error.GrabError.IoOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.error.GrabError.IoOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.IoOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.error.GrabError.IoOperation}
 */
proto.error.GrabError.IoOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.error.GrabError.IoOperation;
  return proto.error.GrabError.IoOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.error.GrabError.IoOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.error.GrabError.IoOperation}
 */
proto.error.GrabError.IoOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.error.GrabError.IoOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.error.GrabError.IoOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.error.GrabError.IoOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.IoOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.error.GrabError.IoOperation.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.error.GrabError.IoOperation} returns this
 */
proto.error.GrabError.IoOperation.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.error.GrabError.InvalidRange.prototype.toObject = function(opt_includeInstance) {
  return proto.error.GrabError.InvalidRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.error.GrabError.InvalidRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.InvalidRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    range: (f = msg.getRange()) && proto.common.RangeInclusive.toObject(includeInstance, f),
    context: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.error.GrabError.InvalidRange}
 */
proto.error.GrabError.InvalidRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.error.GrabError.InvalidRange;
  return proto.error.GrabError.InvalidRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.error.GrabError.InvalidRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.error.GrabError.InvalidRange}
 */
proto.error.GrabError.InvalidRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.common.RangeInclusive;
      reader.readMessage(value,proto.common.RangeInclusive.deserializeBinaryFromReader);
      msg.setRange(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.error.GrabError.InvalidRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.error.GrabError.InvalidRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.error.GrabError.InvalidRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.InvalidRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRange();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.common.RangeInclusive.serializeBinaryToWriter
    );
  }
  f = message.getContext();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional common.RangeInclusive range = 1;
 * @return {?proto.common.RangeInclusive}
 */
proto.error.GrabError.InvalidRange.prototype.getRange = function() {
  return /** @type{?proto.common.RangeInclusive} */ (
    jspb.Message.getWrapperField(this, proto.common.RangeInclusive, 1));
};


/**
 * @param {?proto.common.RangeInclusive|undefined} value
 * @return {!proto.error.GrabError.InvalidRange} returns this
*/
proto.error.GrabError.InvalidRange.prototype.setRange = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.error.GrabError.InvalidRange} returns this
 */
proto.error.GrabError.InvalidRange.prototype.clearRange = function() {
  return this.setRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.error.GrabError.InvalidRange.prototype.hasRange = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string context = 2;
 * @return {string}
 */
proto.error.GrabError.InvalidRange.prototype.getContext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.error.GrabError.InvalidRange} returns this
 */
proto.error.GrabError.InvalidRange.prototype.setContext = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.error.GrabError.Interrupted.prototype.toObject = function(opt_includeInstance) {
  return proto.error.GrabError.Interrupted.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.error.GrabError.Interrupted} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.Interrupted.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.error.GrabError.Interrupted}
 */
proto.error.GrabError.Interrupted.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.error.GrabError.Interrupted;
  return proto.error.GrabError.Interrupted.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.error.GrabError.Interrupted} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.error.GrabError.Interrupted}
 */
proto.error.GrabError.Interrupted.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.error.GrabError.Interrupted.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.error.GrabError.Interrupted.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.error.GrabError.Interrupted} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.Interrupted.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.error.GrabError.NotInitialize.prototype.toObject = function(opt_includeInstance) {
  return proto.error.GrabError.NotInitialize.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.error.GrabError.NotInitialize} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.NotInitialize.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.error.GrabError.NotInitialize}
 */
proto.error.GrabError.NotInitialize.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.error.GrabError.NotInitialize;
  return proto.error.GrabError.NotInitialize.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.error.GrabError.NotInitialize} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.error.GrabError.NotInitialize}
 */
proto.error.GrabError.NotInitialize.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.error.GrabError.NotInitialize.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.error.GrabError.NotInitialize.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.error.GrabError.NotInitialize} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.NotInitialize.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.error.GrabError.Unsupported.prototype.toObject = function(opt_includeInstance) {
  return proto.error.GrabError.Unsupported.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.error.GrabError.Unsupported} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.Unsupported.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.error.GrabError.Unsupported}
 */
proto.error.GrabError.Unsupported.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.error.GrabError.Unsupported;
  return proto.error.GrabError.Unsupported.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.error.GrabError.Unsupported} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.error.GrabError.Unsupported}
 */
proto.error.GrabError.Unsupported.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.error.GrabError.Unsupported.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.error.GrabError.Unsupported.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.error.GrabError.Unsupported} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.error.GrabError.Unsupported.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.error.GrabError.Unsupported.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.error.GrabError.Unsupported} returns this
 */
proto.error.GrabError.Unsupported.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Config config = 1;
 * @return {?proto.error.GrabError.Config}
 */
proto.error.GrabError.prototype.getConfig = function() {
  return /** @type{?proto.error.GrabError.Config} */ (
    jspb.Message.getWrapperField(this, proto.error.GrabError.Config, 1));
};


/**
 * @param {?proto.error.GrabError.Config|undefined} value
 * @return {!proto.error.GrabError} returns this
*/
proto.error.GrabError.prototype.setConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.error.GrabError.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.error.GrabError} returns this
 */
proto.error.GrabError.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.error.GrabError.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Communication communication = 2;
 * @return {?proto.error.GrabError.Communication}
 */
proto.error.GrabError.prototype.getCommunication = function() {
  return /** @type{?proto.error.GrabError.Communication} */ (
    jspb.Message.getWrapperField(this, proto.error.GrabError.Communication, 2));
};


/**
 * @param {?proto.error.GrabError.Communication|undefined} value
 * @return {!proto.error.GrabError} returns this
*/
proto.error.GrabError.prototype.setCommunication = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.error.GrabError.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.error.GrabError} returns this
 */
proto.error.GrabError.prototype.clearCommunication = function() {
  return this.setCommunication(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.error.GrabError.prototype.hasCommunication = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional IoOperation io_operation = 3;
 * @return {?proto.error.GrabError.IoOperation}
 */
proto.error.GrabError.prototype.getIoOperation = function() {
  return /** @type{?proto.error.GrabError.IoOperation} */ (
    jspb.Message.getWrapperField(this, proto.error.GrabError.IoOperation, 3));
};


/**
 * @param {?proto.error.GrabError.IoOperation|undefined} value
 * @return {!proto.error.GrabError} returns this
*/
proto.error.GrabError.prototype.setIoOperation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.error.GrabError.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.error.GrabError} returns this
 */
proto.error.GrabError.prototype.clearIoOperation = function() {
  return this.setIoOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.error.GrabError.prototype.hasIoOperation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional InvalidRange invalid_range = 4;
 * @return {?proto.error.GrabError.InvalidRange}
 */
proto.error.GrabError.prototype.getInvalidRange = function() {
  return /** @type{?proto.error.GrabError.InvalidRange} */ (
    jspb.Message.getWrapperField(this, proto.error.GrabError.InvalidRange, 4));
};


/**
 * @param {?proto.error.GrabError.InvalidRange|undefined} value
 * @return {!proto.error.GrabError} returns this
*/
proto.error.GrabError.prototype.setInvalidRange = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.error.GrabError.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.error.GrabError} returns this
 */
proto.error.GrabError.prototype.clearInvalidRange = function() {
  return this.setInvalidRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.error.GrabError.prototype.hasInvalidRange = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Interrupted interrupted = 5;
 * @return {?proto.error.GrabError.Interrupted}
 */
proto.error.GrabError.prototype.getInterrupted = function() {
  return /** @type{?proto.error.GrabError.Interrupted} */ (
    jspb.Message.getWrapperField(this, proto.error.GrabError.Interrupted, 5));
};


/**
 * @param {?proto.error.GrabError.Interrupted|undefined} value
 * @return {!proto.error.GrabError} returns this
*/
proto.error.GrabError.prototype.setInterrupted = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.error.GrabError.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.error.GrabError} returns this
 */
proto.error.GrabError.prototype.clearInterrupted = function() {
  return this.setInterrupted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.error.GrabError.prototype.hasInterrupted = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional NotInitialize not_initialize = 6;
 * @return {?proto.error.GrabError.NotInitialize}
 */
proto.error.GrabError.prototype.getNotInitialize = function() {
  return /** @type{?proto.error.GrabError.NotInitialize} */ (
    jspb.Message.getWrapperField(this, proto.error.GrabError.NotInitialize, 6));
};


/**
 * @param {?proto.error.GrabError.NotInitialize|undefined} value
 * @return {!proto.error.GrabError} returns this
*/
proto.error.GrabError.prototype.setNotInitialize = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.error.GrabError.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.error.GrabError} returns this
 */
proto.error.GrabError.prototype.clearNotInitialize = function() {
  return this.setNotInitialize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.error.GrabError.prototype.hasNotInitialize = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Unsupported unsupported = 7;
 * @return {?proto.error.GrabError.Unsupported}
 */
proto.error.GrabError.prototype.getUnsupported = function() {
  return /** @type{?proto.error.GrabError.Unsupported} */ (
    jspb.Message.getWrapperField(this, proto.error.GrabError.Unsupported, 7));
};


/**
 * @param {?proto.error.GrabError.Unsupported|undefined} value
 * @return {!proto.error.GrabError} returns this
*/
proto.error.GrabError.prototype.setUnsupported = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.error.GrabError.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.error.GrabError} returns this
 */
proto.error.GrabError.prototype.clearUnsupported = function() {
  return this.setUnsupported(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.error.GrabError.prototype.hasUnsupported = function() {
  return jspb.Message.getField(this, 7) != null;
};


